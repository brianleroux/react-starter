{
  "name": "failing-line",
  "version": "0.1.0",
  "description": "Return the line number and filename of failing line from given error object",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "devDependencies": {
    "tape": "*"
  },
  "keywords": [
    "error",
    "fail",
    "failing",
    "line number"
  ],
  "repository": {
    "url": "git@github.com:azer/failing-line.git",
    "type": "git"
  },
  "author": {
    "name": "azer"
  },
  "license": "BSD",
  "readme": "## failing-line\n\nReturn the line and column number, filename and function name from the failing line from given error object.\n\n## Install\n\n```bash\n$ npm install failing-line\n```\n\n## Usage\n\n```js\nvar failingLine = require('failing-line')\n\nprocess.on('uncaughtException', function (error) {\n  failingLine(error)\n  // => { line: 8, col: 0, function: 'Object.<anonymous>' filename: 'example.js' }\n})\n\nhereIfail++\n```\n\nIf the top line(s) in the stack should be skipped in your case,\npass an extra parameter:\n\n```js\nfailingLine(error, 1) // will start reading stack from second line\n```\n\nCheck out `test.js` for more info.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/azer/failing-line/issues"
  },
  "homepage": "https://github.com/azer/failing-line",
  "_id": "failing-line@0.1.0",
  "dist": {
    "shasum": "fc14fd8f0801a641f1144e4e893010ab6fea2496"
  },
  "_from": "failing-line@0.1.x",
  "_resolved": "https://registry.npmjs.org/failing-line/-/failing-line-0.1.0.tgz"
}
