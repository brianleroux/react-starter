{
  "name": "new-command",
  "version": "0.0.3",
  "description": "Simplifying defining commands and options by combining minimist, show-help, show-version modules",
  "main": "index.js",
  "keywords": [
    "cli",
    "command",
    "argument",
    "version",
    "help"
  ],
  "repository": {
    "url": "git@github.com:azer/new-command.git",
    "type": "git"
  },
  "author": {
    "name": "Azer KoÃ§ulu",
    "email": "azer@kodfabrik.com"
  },
  "license": "BSD",
  "dependencies": {
    "show-help": "1.x",
    "show-version": "1.x",
    "minimist": "0.0.x"
  },
  "readme": "## new-command\n\nSimplifies creating command-line programs by combining [minimist](http://github.com/substack/minimist), [show-help](http://github.com/azer/show-help), [show-version](http://github.com/azer/show-version) modules.\n\nUsage Examples: [prova](https://github.com/azer/prova/blob/master/bin/prova#L3), [bud](https://github.com/azer/bud/blob/master/lib/cli.js#L9), [personal-api](https://github.com/azer/personal-api/blob/master/bin/personal-api.js#L3), [ourtunes](https://github.com/azer/ourtunes/blob/master/bin/ourtunes.js#L5)\n\n## Install\n\n```bash\n$ npm install new-command\n```\n\n## Usage\n\n### Defining Parameters\n\nDefine a command and options by calling new-command:\n\n```js\ncommand = require('new-command')({ 'p': 'port', 'n': 'hostname' })\n\ncommand.port\n// => 8080\n\ncommand.hostname\n// => foobar.com\n```\n\n## Subcommands\n\nTo define subcommands like `git push` `npm publish` etc, just pass subcommand names before options:\n\n```js\ncommand = require('new-command')('install', 'publish', 'unpublish', { r: 'registry', s: 'save' })\n\ncommand.install\n// => undefined\n\ncommand.publish\n// => true\n\ncommand.registry\n// => 'localhost:3000'\n```\n\n### --version and --help\n\n`new-command` will take care of `--version` (-v) and `--help` (-h) options\nfor you, by calling [show-version](http://github.com/azer/show-version) and [show-help](http://github.com/azer/show-help). So, if you call this command with -v parameter:\n\n```bash\n$ start-server --version\n\nstart-server v0.0.0\n```\n\nIt reads your package name and version and outputs automatically. When user calls -h parameter:\n\n```bash\n$ start-server --help\n```\n\nIt'll look for following paths in the project directory and will output the one it finds first:\n\n* docs/man\n* bin/help.txt\n* bin/usage.txt\n* help.txt\n* usage.txt\n* README\n* README.md\n* README.markdown\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/azer/new-command/issues"
  },
  "homepage": "https://github.com/azer/new-command",
  "_id": "new-command@0.0.3",
  "dist": {
    "shasum": "8e8c0ebe7e0b97676bdecf40d7928f737d8aca43"
  },
  "_from": "new-command@0.0.3",
  "_resolved": "https://registry.npmjs.org/new-command/-/new-command-0.0.3.tgz"
}
