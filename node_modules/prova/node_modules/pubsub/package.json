{
  "name": "pubsub",
  "version": "1.0.2",
  "description": "Minimalistic Pubsub Library",
  "main": "index.js",
  "scripts": {
    "test": "prova"
  },
  "devDependencies": {
    "prova": "*"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:azer/pubsub.git"
  },
  "author": {
    "name": "Azer Koculu",
    "email": "azer@kodfabrik.com"
  },
  "maintainers": [
    {
      "name": "Azer",
      "email": "azer@kodfabrik.com"
    }
  ],
  "license": "BSD",
  "readme": "# pubsub [![Build Status](https://travis-ci.org/azer/pubsub.png)](https://travis-ci.org/azer/pubsub)\n\nLibrary for creating individual events with a minimalistic API.\n\n## Install\n\n```bash\n$ npm install pubsub\n```\n\n## Usage\n\n```js\nonReady = pubsub()\n\nonReady(function(a, b, c){ // shortcut to: onReady.subscribe\n    console.log(a, b, c)\n    // => 3, 4, 1\n})\n\nonReady.publish(3, 4, 1)\n```\n\nYou can optionally, you can pass `pubsub()` an object to mix the interfaces:\n\n```js\nfoo = pubsub({ value: 12345 })\n\nfoo.subscribe(function () {\n\n  foo.value\n  // => 3.14\n  // => 158\n})\n\nfoo.value = 314\nfoo.publish()\n\nfoo.value = 158\nfoo.publish()\n```\n\n## API\n\n### subscribe(`fn`)\n\n```js\nfoo.subscribe(function(update){\n\n    update\n    // => 3.14\n    // => 156\n    // => { last: true }\n\n})\n\nfoo.publish(3.14)\nfoo.publish(156)\nfoo.publish({ last: true })\n```\n\n### subscribe.once(`fn`)\n\n```js\nfoo.subscribe.once(function(update){\n\n    update\n    // => 3.14\n\n})\n\nfoo.publish(3.14)\nfoo.publish(156)\n\n```\n\n### unsubscribe(`fn`)\n\n### unsubscribe.once(`fn`)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/azer/pubsub/issues"
  },
  "homepage": "https://github.com/azer/pubsub",
  "_id": "pubsub@1.0.2",
  "_from": "pubsub@^1.0.2"
}
