{
  "name": "stream-format",
  "version": "0.0.3",
  "description": "String formatting with streams",
  "main": "index.js",
  "scripts": {
    "test": "prova"
  },
  "dependencies": {
    "concat-stream": "1.x",
    "new-format": "0.x",
    "through": "~2.3.4",
    "parallel-loop": "0.0.0",
    "pause-function": "0.0.1"
  },
  "devDependencies": {
    "prova": "*",
    "from": "*"
  },
  "keywords": [
    "string",
    "formatting",
    "format",
    "stream"
  ],
  "repository": {
    "url": "git@github.com:azer/stream-format.git",
    "type": "git"
  },
  "author": {
    "name": "Azer KoÃ§ulu",
    "email": "azer@kodfabrik.com"
  },
  "license": "BSD",
  "readme": "## stream-format\n\nString formatting with streams. It's based on [new-format](http://github.com/azer/new-format)\n\n## Install\n\n```bash\n$ npm install stream-format\n```\n\n## Usage\n\nUnlike new-format, it takes strings as streams. For example:\n\n```js\nformat = require('stream-format')\nfs = require('fs')\n\nfs.readFileSync('./foo.txt')\n// => 'Hello, {0} {1}'\n\nrender = format('span', 'eggs').pipe(process.stdout)\n\nfs.createReadSteam('./foo').pipe(render)\n// => 'Hello span eggs'\n```\n\nYou can pass an object of variables instead, and use names in your template:\n\n```js\nfs.readFileSync('./bar.txt')\n// => 'Hello {name} {surname}'\n\nrender = format({ name: 'Azer', surname: 'Koculu' }).pipe(process.stdout)\n\nfs.createReadStream('./bar.txt').pipe(render)\n// => 'Hello Azer Koculu'\n```\n\nVariables can be streams, too:\n\n```js\nfs.readFileSync('./qux.txt')\n// => \"Hello {name}, choose your favorite fruit: {fruits}\"\n\nrender = format({ fruits: fs.createReadStream('fruits.txt'), name: 'azer' }).pipe(process.stdout)\n\nfs.createReadStream('./qux.txt').pipe(render)\n// => Hello azer, choose your favorite fruit: apple, orange, cherry, plums\n```\n\nSee `test.js` for more info.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/azer/stream-format/issues"
  },
  "homepage": "https://github.com/azer/stream-format",
  "_id": "stream-format@0.0.3",
  "dist": {
    "shasum": "335029b15d7c0af210ecc24089552e8b14a10a47"
  },
  "_from": "stream-format@0.0.3",
  "_resolved": "https://registry.npmjs.org/stream-format/-/stream-format-0.0.3.tgz"
}
