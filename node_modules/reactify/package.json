{
  "name": "reactify",
  "version": "0.11.0",
  "description": "browserify v2 plugin for react from Facebook to support jsx",
  "main": "index.js",
  "dependencies": {
    "jstransform": "^3.0.0",
    "through": "~2.3.4",
    "react-tools": ">= 0.9.0"
  },
  "devDependencies": {
    "browserify": "3.x.x",
    "coffeeify": "~0.x.x",
    "es6-module-jstransform": "^0.1.3",
    "jshint": "^2.4.4",
    "mocha": "~1.9.0",
    "semver": "~1.1.4"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/andreypopp/reactify.git"
  },
  "homepage": "https://github.com/andreypopp/reactify",
  "keywords": [
    "react",
    "browserify",
    "browserify-transform",
    "v2",
    "jsx",
    "js",
    "plugin",
    "transform"
  ],
  "author": {
    "name": "Andrey Popp",
    "email": "8mayday@gmail.com",
    "url": "http://andreypopp.com"
  },
  "license": "MIT",
  "readme": "# reactify\n\n[Browserify][] transform for JSX (superset of JavaScript used in [React][]\nlibrary).\n\nBasic usage is:\n\n    % browserify -t reactify main.js\n\n`reactify` transform activates for files with either `.jsx` extension or `/**\n@jsx React.DOM */` pragma as a first line for any `.js` file.\n\nIf you want to reactify modules with other extensions, pass an `-x /\n--extension` option:\n\n    % browserify -t coffeeify -t [ reactify --extension coffee ] main.coffee\n\nIf you don't want to specify extension, just pass `--everything` option:\n\n    % browserify -t coffeeify -t [ reactify --everything ] main.coffee\n\n## ES6 transformation\n\n`reactify` transform also can compile a limited set of es6 syntax constructs\ninto es5. Supported features are arrow functions, rest params, templates, object\nshort notation and classes. You can activate this via `--es6` or `--harmony`\nboolean option:\n\n    % browserify -t [ reactify --es6 ] main.js\n\n## Using 3rd-party jstransform visitors\n\nReactify uses [jstransform][] to transform JavaScript code. It allows code\ntransformations to be pluggable and, what's more important, composable. For\nexample JSX and es6 are implemented as separate code transformations and still\ncan be composed together.\n\nReactify provides `--visitors` option to specify additional jstransform visitos\nwhich could perform additional transformations.\n\nIt should point to a module which exports `visitorList` attribute with a list of\ntransformation functions to be applied:\n\n    % browserify -t [ reactify --visitors es6-module-jstransform/visitors ] main.js\n\nExample above uses [es6-module-jstransform][] to compile es6 module syntax\n(`import` and `export` declarations) into CommonJS module constructs.\n\n[Browserify]: http://browserify.org\n[React]: http://facebook.github.io/react/\n[jstransform]: https://github.com/facebook/jstransform\n[es6-module-jstransform]: https://github.com/andreypopp/es6-module-jstransform\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/andreypopp/reactify/issues"
  },
  "_id": "reactify@0.11.0",
  "_from": "reactify@"
}
